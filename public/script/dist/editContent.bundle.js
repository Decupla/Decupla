/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./public/script/editContent/main.js":
/*!*******************************************!*\
  !*** ./public/script/editContent/main.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/dom */ \"./public/script/editContent/modules/dom.js\");\n/* harmony import */ var _modules_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/data */ \"./public/script/editContent/modules/data.js\");\n/* harmony import */ var _modules_eventHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/eventHandler */ \"./public/script/editContent/modules/eventHandler.js\");\n/* harmony import */ var _modules_blocks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/blocks */ \"./public/script/editContent/modules/blocks.js\");\n/* harmony import */ var _modules_blockForm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/blockForm */ \"./public/script/editContent/modules/blockForm.js\");\n/* harmony import */ var _modules_content__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/content */ \"./public/script/editContent/modules/content.js\");\n\n\n\n\n\n\n\n\nconst init = async () => {\n    const path = window.location.pathname;\n    \n    (0,_modules_data__WEBPACK_IMPORTED_MODULE_1__.setContentExists)((0,_modules_content__WEBPACK_IMPORTED_MODULE_5__.checkIfExists)(path));\n\n    if (_modules_data__WEBPACK_IMPORTED_MODULE_1__.contentExists) {\n        (0,_modules_data__WEBPACK_IMPORTED_MODULE_1__.setContentID)((0,_modules_content__WEBPACK_IMPORTED_MODULE_5__.getId)(path));\n        await (0,_modules_blocks__WEBPACK_IMPORTED_MODULE_3__.getBlocks)(_modules_data__WEBPACK_IMPORTED_MODULE_1__.contentID);\n    }\n\n    _modules_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addBlockButtonContainers.forEach((container) => {\n        (0,_modules_blockForm__WEBPACK_IMPORTED_MODULE_4__.setupBlockSelection)(container);\n    })\n\n    _modules_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].contentForm.addEventListener('submit', (event) => {\n        ;(0,_modules_eventHandler__WEBPACK_IMPORTED_MODULE_2__.handleContentSubmit)(event)\n    }\n    );\n\n    _modules_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].blockForm.addEventListener('submit', (event) => {\n        (0,_modules_eventHandler__WEBPACK_IMPORTED_MODULE_2__.handleBlockSubmit)(event,1);\n    });\n\n    _modules_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].blockFormEnd.addEventListener('submit', (event) => {\n        (0,_modules_eventHandler__WEBPACK_IMPORTED_MODULE_2__.handleBlockSubmit)(event,_modules_data__WEBPACK_IMPORTED_MODULE_1__.nextPriority);\n    })\n\n\n}\n\ninit();\n\n\n\n//# sourceURL=webpack://decupla/./public/script/editContent/main.js?");

/***/ }),

/***/ "./public/script/editContent/modules/api.js":
/*!**************************************************!*\
  !*** ./public/script/editContent/modules/api.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteBlockInstance: () => (/* binding */ deleteBlockInstance),\n/* harmony export */   fetchContentBlocks: () => (/* binding */ fetchContentBlocks),\n/* harmony export */   saveBlockData: () => (/* binding */ saveBlockData),\n/* harmony export */   saveContentData: () => (/* binding */ saveContentData)\n/* harmony export */ });\nconst fetchContentBlocks = async (id) => {\n    const response = await fetch(`/content/${id}/blocks`);\n    return response.json();\n};\n\nconst saveContentData = async (url, method, data) => {\n    const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    });\n    return response.json();\n};\n\nconst saveBlockData = async (url, method, data) => {\n    const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n    });\n    return response.json();\n};\n\nconst deleteBlockInstance = async (id) => {\n    const response = await fetch(`/blocks/instances/${id}`, { method: 'DELETE' });\n    return response.json();\n};\n\n\n//# sourceURL=webpack://decupla/./public/script/editContent/modules/api.js?");

/***/ }),

/***/ "./public/script/editContent/modules/blockForm.js":
/*!********************************************************!*\
  !*** ./public/script/editContent/modules/blockForm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeBlockForm: () => (/* binding */ closeBlockForm),\n/* harmony export */   setupBlockForm: () => (/* binding */ setupBlockForm),\n/* harmony export */   setupBlockSelection: () => (/* binding */ setupBlockSelection)\n/* harmony export */ });\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ \"./public/script/editContent/modules/dom.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./public/script/editContent/modules/data.js\");\n\n\n\n// loads the Form / Popup for creating or editing a block instance\nconst setupBlockForm = async (blockID, container, setOutput = {}) => {\n    // param blockID is the id of the block used to create or edit the instance\n    const response = await fetch(`/blocks/${blockID}`);\n    const blocksData = await response.json();\n\n    if (blocksData.success) {\n        const block = blocksData.block;\n        const inputFields = JSON.parse(block.input);\n\n        const blockFormTitle = container.querySelector('h3.block-form-title');\n\n        blockFormTitle.innerText = block.title;\n\n        inputFields.forEach((input) => {\n            if (setOutput[input.name]) {\n                createInput(input, setOutput[input.name], container);\n            } else {\n                createInput(input, \"\", container);\n            }\n        })\n\n        ;(0,_data__WEBPACK_IMPORTED_MODULE_1__.setCurrentBlock)(block);\n    }\n}\n\nconst closeBlockForm = () => {\n    const activeForms = document.querySelectorAll('.show-form-container');\n\n    activeForms.forEach((element)=>{\n        element.classList.remove('show-form-container');\n\n        const input = element.querySelector('.block-form-input');\n        input.innerHTML = \"\";\n    })\n}\n\n// sets up the block selection dropdown\nconst setupBlockSelection = (container) => {\n    const button = container.querySelector('.add-block-button');\n    const closeButton = container.querySelector('.dropdown-close');\n    const dropdown = container.querySelector('.add-block-dropdown');\n    const blocks = container.querySelectorAll('ul li.block');\n\n    button.addEventListener('click', () => {\n        container.classList.add('show-block-selection');\n    })\n\n    closeButton.addEventListener('click',()=>{\n        container.classList.remove('show-block-selection');\n    })\n\n    blocks.forEach((block) => {\n        block.addEventListener('click', () => {\n            ;(0,_data__WEBPACK_IMPORTED_MODULE_1__.setBlockMethod)(\"create\");\n            container.classList.remove('show-block-selection');\n            container.classList.add('show-form-container')\n            setupBlockForm(block.dataset.id,container);\n        })\n    })\n}\n\n// loads the input fields to the block form. Param \"value\" is used while editing a existing instance\nconst createInput = (inputData, value, container) => {\n    let newInput;\n\n    switch (inputData.type) {\n        case 'shortText':\n            newInput = document.createElement('input');\n            newInput.type = \"text\";\n            if (value !== \"\") {\n                newInput.value = value;\n            }\n            break;\n        case 'longText':\n            newInput = document.createElement('textarea');\n\n            if (value !== \"\") {\n                newInput.innerText = value;\n            }\n            break;\n        default:\n            console.log('Invalid input type given: ' + inputData.type);\n            return;\n    }\n\n    const newLabel = document.createElement('label');\n    newLabel.for = inputData.name;\n    newLabel.innerText = inputData.label;\n\n    newInput.id = inputData.name;\n    newInput.name = inputData.name;\n\n    const newFieldset = document.createElement('div');\n\n    newFieldset.appendChild(newLabel);\n    newFieldset.appendChild(newInput);\n\n    const blockFormInput = container.querySelector('.block-form-input');\n\n    if(!blockFormInput){\n        console.log('Element block-form-input could not be found');\n        return;\n    }\n\n    blockFormInput.appendChild(newFieldset);\n}\n\n//# sourceURL=webpack://decupla/./public/script/editContent/modules/blockForm.js?");

/***/ }),

/***/ "./public/script/editContent/modules/blocks.js":
/*!*****************************************************!*\
  !*** ./public/script/editContent/modules/blocks.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteBlock: () => (/* binding */ deleteBlock),\n/* harmony export */   editBlock: () => (/* binding */ editBlock),\n/* harmony export */   getBlocks: () => (/* binding */ getBlocks),\n/* harmony export */   reloadBlocks: () => (/* binding */ reloadBlocks),\n/* harmony export */   saveNewBlock: () => (/* binding */ saveNewBlock),\n/* harmony export */   updateBlock: () => (/* binding */ updateBlock)\n/* harmony export */ });\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ \"./public/script/editContent/modules/dom.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./public/script/editContent/modules/data.js\");\n/* harmony import */ var _visualization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./visualization */ \"./public/script/editContent/modules/visualization.js\");\n/* harmony import */ var _blockForm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./blockForm */ \"./public/script/editContent/modules/blockForm.js\");\n\n\n\n\n\n// if content already exists and has blocks this will load in the block instances\nconst getBlocks = async (id) => {\n    try {\n        const response = await fetch(`/content/${id}/blocks`);\n        const data = await response.json();\n\n        if (data.success === true) {\n            const blocks = data.blocks;\n\n            const blocksParsed = blocks.map(({ id, ...block }) => ({\n                // this is the id the block instances has in the blocksData Array, used for frontend purposes\n                instanceID: (0,_data__WEBPACK_IMPORTED_MODULE_1__.getInstanceId)(),\n                // this is the id the block instance has in the database\n                databaseID: id,\n                ...block,\n                output: JSON.parse(block.output),\n            }));\n\n            _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.push(...blocksParsed);\n\n            if (_data__WEBPACK_IMPORTED_MODULE_1__.blocksData.length > 0) {\n                const currentMaxPriority = Math.max(0, ..._data__WEBPACK_IMPORTED_MODULE_1__.blocksData.map(block => block.priority));\n                (0,_data__WEBPACK_IMPORTED_MODULE_1__.setNextPriority)(currentMaxPriority + 1);\n            }\n\n            _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.forEach((data) => {\n                (0,_visualization__WEBPACK_IMPORTED_MODULE_2__.addBlockVisualization)(data);\n            });\n\n            (0,_visualization__WEBPACK_IMPORTED_MODULE_2__.setLastVisualisation)();\n        } else {\n            // to do: fehlermeldung auf der Seite ausgebe\n            console.log(data.message);\n        }\n\n    } catch (error) {\n        console.error('Something went wrong:', error);\n    }\n}\n\n//loads the block form for editing a existing block instance\nconst editBlock = (instanceID, blockID, container) => {\n    ;(0,_data__WEBPACK_IMPORTED_MODULE_1__.setBlockMethod)(\"update\");\n    container.classList.add('show-form-container');\n\n    // selects the block from the blockData Array. ID is passed as a parameter when setting up the event listener for the edit button\n    const data = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.find(block => block.instanceID === instanceID) || null;\n    // note: if we are working on a existing content, property databaseID whill exist at this point. If we are working on new content it wont\n\n    // returns if for some reason the data could not be found inside the array\n    if (data === null) {\n        console.log('Input to edit could not be found.');\n        return;\n    }\n\n    // the output set for this instance\n    const setOutput = data.output;\n\n    // set global currentInstanceID, so we now which instance form the array we want to update\n    (0,_data__WEBPACK_IMPORTED_MODULE_1__.setCurrentInstanceID)(instanceID);\n\n    // sets up the block Form with the existing output\n    (0,_blockForm__WEBPACK_IMPORTED_MODULE_3__.setupBlockForm)(blockID, container, setOutput);\n}\n\n// adds a block instance to the deletedBlocks array and removes the visualization\nconst deleteBlock = (instanceID) => {\n\n    // get the index of the block instance in the blocksData array\n    const index = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.findIndex(block => block.instanceID === instanceID);\n\n    if (index !== -1) {\n\n        // if we are editing existing content, we need to save the database id of the block instance, so we can delete it from the database later\n        if (_data__WEBPACK_IMPORTED_MODULE_1__.contentExists) {\n            _data__WEBPACK_IMPORTED_MODULE_1__.deletedBlocks.push(_data__WEBPACK_IMPORTED_MODULE_1__.blocksData[index].databaseID);\n        }\n\n        const removedPriority = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData[index].priority;\n\n        // remove instance from the array\n        _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.splice(index, 1);\n\n        //update block priorities\n        _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.forEach(block => {\n            if (block.priority > removedPriority) {\n                block.priority -= 1;\n                (0,_visualization__WEBPACK_IMPORTED_MODULE_2__.updateVisualizationPriority)(block.instanceID, block.priority);\n            }\n        });\n\n        const currentMaxPriority = Math.max(0, ..._data__WEBPACK_IMPORTED_MODULE_1__.blocksData.map(block => block.priority));\n        (0,_data__WEBPACK_IMPORTED_MODULE_1__.setNextPriority)(currentMaxPriority + 1);\n\n        // we also need to remove the visualization\n        (0,_visualization__WEBPACK_IMPORTED_MODULE_2__.deleteBlockVisualization)(instanceID);\n\n        (0,_visualization__WEBPACK_IMPORTED_MODULE_2__.setLastVisualisation)();\n\n        if(_data__WEBPACK_IMPORTED_MODULE_1__.blocksData.length===0){\n            _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addBlockContainerEnd.classList.remove('visible');\n        }\n    }\n}\n\n// reloads the blockData array and also reloads the block visualizations\nconst reloadBlocks = async (id) => {\n    ;(0,_data__WEBPACK_IMPORTED_MODULE_1__.clearBlocksData)();\n    (0,_data__WEBPACK_IMPORTED_MODULE_1__.clearDeletedBlocks)();\n    _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].blocksArea.innerHTML = \"\";\n    getBlocks(id);\n}\n\n// updating a existing block instance in the blockData array and update the visualization\nconst updateBlock = (data) => {\n\n    // get the index of the block instance in the blockData array\n    const index = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.findIndex(block => block.instanceID === _data__WEBPACK_IMPORTED_MODULE_1__.currentInstanceID);\n\n    if (index !== -1 && _data__WEBPACK_IMPORTED_MODULE_1__.currentInstanceID !== 0) {\n        // the only thing that can change in a existing instance is the output. That way we can keep database id etc.\n        _data__WEBPACK_IMPORTED_MODULE_1__.blocksData[index].output = data.output;\n\n        // we also need to update the visualization\n        (0,_visualization__WEBPACK_IMPORTED_MODULE_2__.updateBlockVisualization)(_data__WEBPACK_IMPORTED_MODULE_1__.currentInstanceID, data);\n\n        (0,_blockForm__WEBPACK_IMPORTED_MODULE_3__.closeBlockForm)();\n    }\n}\n\n// saves a new block to the blockData array and creates new visualization\nconst saveNewBlock = (data, priority) => {\n    // adds the id of the instance for the blockData Array. NOT the id for the database\n    data.instanceID = (0,_data__WEBPACK_IMPORTED_MODULE_1__.getInstanceId)();\n    data.priority = priority;\n\n    //update existing block priorities\n    _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.forEach(block => {\n        if (block.priority >= priority) {\n            block.priority += 1;\n            (0,_visualization__WEBPACK_IMPORTED_MODULE_2__.updateVisualizationPriority)(block.instanceID, block.priority);\n        }\n    });\n\n    _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.push(data);\n    (0,_blockForm__WEBPACK_IMPORTED_MODULE_3__.closeBlockForm)();\n\n\n    (0,_visualization__WEBPACK_IMPORTED_MODULE_2__.addBlockVisualization)(data);\n\n    if(!_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addBlockContainerEnd.classList.contains('visible')){\n        _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addBlockContainerEnd.classList.add('visible');\n    }\n\n    const currentMaxPriority = Math.max(0, ..._data__WEBPACK_IMPORTED_MODULE_1__.blocksData.map(block => block.priority));\n    (0,_data__WEBPACK_IMPORTED_MODULE_1__.setNextPriority)(currentMaxPriority + 1);\n\n    (0,_visualization__WEBPACK_IMPORTED_MODULE_2__.setLastVisualisation)();\n}\n\n//# sourceURL=webpack://decupla/./public/script/editContent/modules/blocks.js?");

/***/ }),

/***/ "./public/script/editContent/modules/content.js":
/*!******************************************************!*\
  !*** ./public/script/editContent/modules/content.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkIfExists: () => (/* binding */ checkIfExists),\n/* harmony export */   getId: () => (/* binding */ getId)\n/* harmony export */ });\n// checks if we are creating new content or editing existing content\nconst checkIfExists = (path) => {\n    const regex = /^\\/content\\/edit\\/(\\d+)$/;\n    return path.match(regex);\n}\n\nconst getId = (path) => {\n    const parts = path.split(\"/\");\n    const id = parts[parts.length - 1];\n    return parseInt(id);\n}\n\n//# sourceURL=webpack://decupla/./public/script/editContent/modules/content.js?");

/***/ }),

/***/ "./public/script/editContent/modules/data.js":
/*!***************************************************!*\
  !*** ./public/script/editContent/modules/data.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blockMethod: () => (/* binding */ blockMethod),\n/* harmony export */   blocksData: () => (/* binding */ blocksData),\n/* harmony export */   clearBlocksData: () => (/* binding */ clearBlocksData),\n/* harmony export */   clearDeletedBlocks: () => (/* binding */ clearDeletedBlocks),\n/* harmony export */   contentExists: () => (/* binding */ contentExists),\n/* harmony export */   contentID: () => (/* binding */ contentID),\n/* harmony export */   currentBlock: () => (/* binding */ currentBlock),\n/* harmony export */   currentInstanceID: () => (/* binding */ currentInstanceID),\n/* harmony export */   deletedBlocks: () => (/* binding */ deletedBlocks),\n/* harmony export */   getInstanceId: () => (/* binding */ getInstanceId),\n/* harmony export */   getPriority: () => (/* binding */ getPriority),\n/* harmony export */   nextInstanceId: () => (/* binding */ nextInstanceId),\n/* harmony export */   nextPriority: () => (/* binding */ nextPriority),\n/* harmony export */   setBlockMethod: () => (/* binding */ setBlockMethod),\n/* harmony export */   setContentExists: () => (/* binding */ setContentExists),\n/* harmony export */   setContentID: () => (/* binding */ setContentID),\n/* harmony export */   setCurrentBlock: () => (/* binding */ setCurrentBlock),\n/* harmony export */   setCurrentInstanceID: () => (/* binding */ setCurrentInstanceID),\n/* harmony export */   setNextPriority: () => (/* binding */ setNextPriority)\n/* harmony export */ });\nlet blocksData = [];\n\n// if we are deleting existing block instances, the database ids of the blocks will be saved here \nlet deletedBlocks = [];\n// saves the data of the current block which is used to create or edit a instance \nlet currentBlock = {};\n// the ID of the block instance currently being edited. Used for updating the instance. Not used for the database!\nlet currentInstanceID = 0;\n// used for the blocksData array. Basically the better index. Not used for the database!\nlet nextInstanceId = 1;\n// the priority to order the block instances\nlet nextPriority = 1;\n\nlet blockMethod = \"create\";\n\nlet contentExists = false;\n// if content already exist the id will be stored here\nlet contentID;\n\nconst setBlockMethod = (value) => blockMethod = value;\nconst setContentExists = (value) => contentExists = value;\nconst setContentID = (id) => contentID = id;\nconst setCurrentInstanceID = (id) => currentInstanceID = id;\nconst setCurrentBlock = (data) => currentBlock = data;\nconst setNextPriority = (priority) => nextPriority = priority;\n\nconst clearBlocksData= () => {\n    blocksData = [];\n}\n\nconst clearDeletedBlocks= () => {\n    deletedBlocks = [];\n}\n\nconst getInstanceId = () => { \n    return nextInstanceId++ \n};\n\nconst getPriority = () => {\n    return nextPriority++;\n}\n\n//# sourceURL=webpack://decupla/./public/script/editContent/modules/data.js?");

/***/ }),

/***/ "./public/script/editContent/modules/dom.js":
/*!**************************************************!*\
  !*** ./public/script/editContent/modules/dom.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst DOM = {\n    contentForm: document.querySelector('form#contentForm'),\n    blocksArea: document.querySelector('#blocks'),\n    titleInput: document.querySelector('input#title'),\n    titleMessage: document.querySelector('#message-title'),\n    savedMessage: document.querySelector('#message-saved'),\n    addBlockButtonContainers: document.querySelectorAll('.add-block-container'),\n    addBlockContainerEnd: document.querySelector('.add-block-container.end'),\n    blockFormContainer: document.querySelector('.block-form-container'),\n    // blockFormTitle: document.querySelector('#blockFormTitle'),\n    blockForm: document.querySelector('form#blockForm'),\n    blockFormEnd: document.querySelector('form#blockFormEnd')\n\n    // blockFormInput: document.querySelector('#blockFormInput')\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DOM);\n\n\n//# sourceURL=webpack://decupla/./public/script/editContent/modules/dom.js?");

/***/ }),

/***/ "./public/script/editContent/modules/eventHandler.js":
/*!***********************************************************!*\
  !*** ./public/script/editContent/modules/eventHandler.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleBlockSubmit: () => (/* binding */ handleBlockSubmit),\n/* harmony export */   handleContentSubmit: () => (/* binding */ handleContentSubmit)\n/* harmony export */ });\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ \"./public/script/editContent/modules/dom.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./public/script/editContent/modules/data.js\");\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api */ \"./public/script/editContent/modules/api.js\");\n/* harmony import */ var _blocks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./blocks */ \"./public/script/editContent/modules/blocks.js\");\n\n\n\n\n\nconst handleContentSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData(event.target);\n    // the data from the form. No blocks jet.\n    const data = Object.fromEntries(formData.entries());\n    data.title = _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].titleInput.value;\n\n    if (data.title.trim()===\"\") {\n        _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].titleMessage.classList.add('visible');\n        return;\n    }\n\n    try {\n        let method = \"POST\";\n        let contentUrl = \"/content/\";\n\n        // if we are editing existing content, we need a different method and url\n        if (_data__WEBPACK_IMPORTED_MODULE_1__.contentExists) {\n            method = \"PUT\";\n            contentUrl = `/content/${_data__WEBPACK_IMPORTED_MODULE_1__.contentID}`;\n        }\n\n        const response = await (0,_api__WEBPACK_IMPORTED_MODULE_2__.saveContentData)(contentUrl, method, data);\n\n        // check if saving the basic data was successfull\n        if (!response.success) {\n            console.error(response.message);\n            return;\n        }\n\n        // if we are creating new content, we need the id of the new saved content \n        let newID;\n        if (!_data__WEBPACK_IMPORTED_MODULE_1__.contentExists) {\n            if ('newID' in response) {\n                newID = response.newID;\n            }\n        }\n\n        for (const instance of _data__WEBPACK_IMPORTED_MODULE_1__.blocksData) {\n            const instanceData = {\n                blockID: instance.blockID,\n                output: JSON.stringify(instance.output),\n                priority: instance.priority\n            };\n\n            // if we are creating new content use the id of the new saved content, otherwise use the global contentID\n            if (!_data__WEBPACK_IMPORTED_MODULE_1__.contentExists) {\n                instanceData.contentID = newID;\n            } else {\n                instanceData.contentID = _data__WEBPACK_IMPORTED_MODULE_1__.contentID;\n            }\n\n            method = \"POST\"\n            let blockUrl = \"/blocks/instances/\"\n            //if the instance has the property 'databaseID' we need to update it in the database\n            if ('databaseID' in instance) {\n                method = \"PUT\";\n                blockUrl = `/blocks/instances/${instance.databaseID}`;\n            }\n\n            const blockResponse = await (0,_api__WEBPACK_IMPORTED_MODULE_2__.saveBlockData)(blockUrl, method, instanceData);\n\n            // check if saving the block data was successfull\n            if (!blockResponse.success) {\n                console.error(blockResponse.message);\n                return;\n            }\n        }\n\n        if (_data__WEBPACK_IMPORTED_MODULE_1__.contentExists && _data__WEBPACK_IMPORTED_MODULE_1__.deletedBlocks.length > 0) {\n            for (const id of _data__WEBPACK_IMPORTED_MODULE_1__.deletedBlocks) {\n                const deletedResponse = await (0,_api__WEBPACK_IMPORTED_MODULE_2__.deleteBlockInstance)(id);\n\n                // check if deleting the block data was successfull\n                if (!deletedResponse.success) {\n                    console.error(deletedResponse.message);\n                    return;\n                }\n            }\n        }\n\n        _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].savedMessage.classList.add('visible');\n\n        // if we created new content we are now editing it after the first save\n        if (!_data__WEBPACK_IMPORTED_MODULE_1__.contentExists) {\n            (0,_data__WEBPACK_IMPORTED_MODULE_1__.setContentExists)(true);\n            (0,_data__WEBPACK_IMPORTED_MODULE_1__.setContentID)(newID);\n            (0,_blocks__WEBPACK_IMPORTED_MODULE_3__.reloadBlocks)(newID);\n        } else {\n            (0,_blocks__WEBPACK_IMPORTED_MODULE_3__.reloadBlocks)(_data__WEBPACK_IMPORTED_MODULE_1__.contentID);\n        }\n\n    } catch (error) {\n        console.error('An error occurred:', error);\n    }\n}\n\nconst handleBlockSubmit = (event,priority=1) => {\n    event.preventDefault();\n\n    const formData = new FormData(event.target);\n    // the data of the block form. Only the output, no more informations about the block\n    const output = Object.fromEntries(formData.entries());\n\n    // the data we want to be saved in the blocksData Array\n    const data = {\n        title: _data__WEBPACK_IMPORTED_MODULE_1__.currentBlock.title,\n        blockID: _data__WEBPACK_IMPORTED_MODULE_1__.currentBlock.id,\n        output\n    }\n\n    if (_data__WEBPACK_IMPORTED_MODULE_1__.blockMethod === \"create\") {\n        (0,_blocks__WEBPACK_IMPORTED_MODULE_3__.saveNewBlock)(data,priority);\n    } else if (_data__WEBPACK_IMPORTED_MODULE_1__.blockMethod === \"update\") {\n        (0,_blocks__WEBPACK_IMPORTED_MODULE_3__.updateBlock)(data);\n    } else {\n        console.log('No block method was given.');\n    }\n}\n\n//# sourceURL=webpack://decupla/./public/script/editContent/modules/eventHandler.js?");

/***/ }),

/***/ "./public/script/editContent/modules/priority.js":
/*!*******************************************************!*\
  !*** ./public/script/editContent/modules/priority.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   priorityDown: () => (/* binding */ priorityDown),\n/* harmony export */   priorityUp: () => (/* binding */ priorityUp),\n/* harmony export */   updateBlocksPriority: () => (/* binding */ updateBlocksPriority)\n/* harmony export */ });\n/* harmony import */ var _visualization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./visualization */ \"./public/script/editContent/modules/visualization.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./public/script/editContent/modules/data.js\");\n\n\n\nconst priorityUp = (instanceID) => {\n    const index = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.findIndex(block => block.instanceID === instanceID);\n\n    if (index !== -1) {\n        const priority = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData[index].priority;\n        const newPriority = priority - 1;\n\n        if (priority > 1) {\n            const prevBlock = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.find(block => block.priority === newPriority);\n\n            if (prevBlock) {\n                prevBlock.priority++;\n                _data__WEBPACK_IMPORTED_MODULE_1__.blocksData[index].priority = newPriority;\n\n                (0,_visualization__WEBPACK_IMPORTED_MODULE_0__.updateVisualizationPriority)(instanceID, newPriority);\n                (0,_visualization__WEBPACK_IMPORTED_MODULE_0__.updateVisualizationPriority)(prevBlock.instanceID, prevBlock.priority);\n\n                (0,_visualization__WEBPACK_IMPORTED_MODULE_0__.setLastVisualisation)();\n            }\n        }\n    }\n};\n\n\nconst priorityDown = (instanceID) => {\n    const index = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.findIndex(block => block.instanceID === instanceID);\n\n    if (index !== -1) {\n        const priority = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData[index].priority;\n        const newPriority = priority + 1;\n\n        if (priority !== _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.length) {\n            const nextBlock = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.find(block => block.priority === newPriority);\n\n            if (nextBlock) {\n                nextBlock.priority--;\n                _data__WEBPACK_IMPORTED_MODULE_1__.blocksData[index].priority = newPriority;\n\n                (0,_visualization__WEBPACK_IMPORTED_MODULE_0__.updateVisualizationPriority)(instanceID, newPriority);\n                (0,_visualization__WEBPACK_IMPORTED_MODULE_0__.updateVisualizationPriority)(nextBlock.instanceID, nextBlock.priority);\n\n                (0,_visualization__WEBPACK_IMPORTED_MODULE_0__.setLastVisualisation)();\n            }\n        }\n    }\n}\n\nconst updateBlocksPriority = (changedPriority,changedInstanceID=0) => {\n    _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.forEach(block => {\n\n        if (block.priority > changedPriority) {\n            block.priority -= 1;\n            (0,_visualization__WEBPACK_IMPORTED_MODULE_0__.updateVisualizationPriority)(block.instanceID, block.priority);\n        }\n    });\n\n    const currentMaxPriority = Math.max(0, ..._data__WEBPACK_IMPORTED_MODULE_1__.blocksData.map(block => block.priority));\n    (0,_data__WEBPACK_IMPORTED_MODULE_1__.setNextPriority)(currentMaxPriority + 1);\n}\n\n//# sourceURL=webpack://decupla/./public/script/editContent/modules/priority.js?");

/***/ }),

/***/ "./public/script/editContent/modules/visualization.js":
/*!************************************************************!*\
  !*** ./public/script/editContent/modules/visualization.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBlockVisualization: () => (/* binding */ addBlockVisualization),\n/* harmony export */   deleteBlockVisualization: () => (/* binding */ deleteBlockVisualization),\n/* harmony export */   setLastVisualisation: () => (/* binding */ setLastVisualisation),\n/* harmony export */   updateBlockVisualization: () => (/* binding */ updateBlockVisualization),\n/* harmony export */   updateVisualizationPriority: () => (/* binding */ updateVisualizationPriority)\n/* harmony export */ });\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ \"./public/script/editContent/modules/dom.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./public/script/editContent/modules/data.js\");\n/* harmony import */ var _blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./blocks */ \"./public/script/editContent/modules/blocks.js\");\n/* harmony import */ var _priority__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./priority */ \"./public/script/editContent/modules/priority.js\");\n/* harmony import */ var _eventHandler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./eventHandler */ \"./public/script/editContent/modules/eventHandler.js\");\n/* harmony import */ var _blockForm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./blockForm */ \"./public/script/editContent/modules/blockForm.js\");\n\n\n\n\n\n\n\nconst addBlockVisualization = (data) => {\n    const container = document.createElement('div');\n    const block = document.createElement('div');\n    const titleContainer = document.createElement('div');\n    const blockTitle = document.createElement('h3');\n    const blockOutput = document.createElement('div');\n    const buttons = document.createElement('div');\n    const priority = document.createElement('div');\n    const upButton = document.createElement('button');\n    const downButton = document.createElement('button');\n    const editButton = document.createElement('button');\n    const deleteButton = document.createElement('button');\n    const upIcon = document.createElement('img');\n    const downIcon = document.createElement('img');\n    const editIcon = document.createElement('img');\n    const deleteIcon = document.createElement('img');\n\n    container.classList.add('block-vis-container');\n    block.classList.add('block-vis');\n    titleContainer.classList.add('title-container');\n    blockTitle.classList.add('title');\n    blockOutput.classList.add('output');\n    buttons.classList.add('buttons');\n    priority.classList.add('priority');\n    upButton.classList.add('up');\n    downButton.classList.add('down');\n    editButton.classList.add('edit');\n    deleteButton.classList.add('delete');\n\n    blockTitle.innerText = data.title;\n\n    upButton.type=\"button\";\n    downButton.type=\"button\";\n    editButton.type = \"button\";\n    deleteButton.type = \"button\";\n\n    upIcon.src = \"/images/icons/up.png\";\n    downIcon.src = \"/images/icons/down.png\";\n    editIcon.src = \"/images/icons/edit.png\";\n    editIcon.alt = \"edit\";\n    deleteIcon.src = \"/images/icons/delete_red.png\";\n    deleteIcon.alt = \"delete\";\n\n    container.dataset.instance = data.instanceID;\n    container.dataset.priority = data.priority;\n    container.style.order = data.priority;\n\n    Object.entries(data.output).forEach(([key, value]) => {\n        const output = `<strong>${key}</strong>: ${value}<br>`;\n        blockOutput.innerHTML += output;\n    });\n\n    upButton.appendChild(upIcon);\n    downButton.appendChild(downIcon);\n    editButton.appendChild(editIcon);\n    deleteButton.appendChild(deleteIcon);\n\n    priority.appendChild(upButton);\n    priority.appendChild(downButton);\n\n    buttons.appendChild(priority);\n    buttons.appendChild(editButton);\n    buttons.appendChild(deleteButton);\n\n    titleContainer.appendChild(blockTitle);\n    titleContainer.appendChild(buttons);\n\n    block.appendChild(titleContainer);\n    block.appendChild(blockOutput);\n\n    const formContainerClone = _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].blockFormContainer.cloneNode(true);\n    const form = formContainerClone.querySelector('form');\n    form.id = \"\";\n\n    const addBlockContainerClone = _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addBlockButtonContainers[0].cloneNode(true);\n    addBlockContainerClone.classList.add('add-in-between');\n    const addBlockForm = addBlockContainerClone.querySelector('form');\n    \n    container.appendChild(block);\n    container.appendChild(formContainerClone);\n    container.appendChild(addBlockContainerClone);\n    _dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].blocksArea.appendChild(container);\n\n\n    upButton.addEventListener('click', () => (0,_priority__WEBPACK_IMPORTED_MODULE_3__.priorityUp)(data.instanceID));\n    downButton.addEventListener('click', () => (0,_priority__WEBPACK_IMPORTED_MODULE_3__.priorityDown)(data.instanceID));\n    editButton.addEventListener('click', () => (0,_blocks__WEBPACK_IMPORTED_MODULE_2__.editBlock)(data.instanceID, data.blockID, container));\n    deleteButton.addEventListener('click', () => (0,_blocks__WEBPACK_IMPORTED_MODULE_2__.deleteBlock)(data.instanceID));\n    form.addEventListener('submit', (event) => {\n        (0,_eventHandler__WEBPACK_IMPORTED_MODULE_4__.handleBlockSubmit)(event);\n    });\n    addBlockForm.addEventListener('submit', (event) => {\n        const block = _data__WEBPACK_IMPORTED_MODULE_1__.blocksData.find(block => block.instanceID === data.instanceID);\n        const priority = block.priority + 1;\n        (0,_eventHandler__WEBPACK_IMPORTED_MODULE_4__.handleBlockSubmit)(event, priority)\n    })\n\n    ;(0,_blockForm__WEBPACK_IMPORTED_MODULE_5__.setupBlockSelection)(addBlockContainerClone);\n\n    console.log('Priority: ',data.priority);\n    console.log('Next Priority: ',_data__WEBPACK_IMPORTED_MODULE_1__.nextPriority);\n};\n\n// updates a existing visualization\nconst updateBlockVisualization = (instanceID, data) => {\n    const vis = document.querySelector(`.block-vis-container[data-instance=\"${instanceID}\"]`);\n    const blockTitle = vis.querySelector('h3');\n    const blockOutput = vis.querySelector('.output');\n\n    blockTitle.innerText = data.title;\n\n    blockOutput.innerHTML = \"\";\n\n    Object.entries(data.output).forEach(([key, value]) => {\n        const output = `<strong>${key}</strong>: ${value}<br>`;\n        blockOutput.innerHTML += output;\n    });\n}\n\n// deletes a existing visualization\nconst deleteBlockVisualization = (instanceID) => {\n    const vis = document.querySelector(`.block-vis-container[data-instance=\"${instanceID}\"]`);\n    vis.remove();\n}\n\nconst updateVisualizationPriority = (instanceID,priority) => {\n    const vis = document.querySelector(`.block-vis-container[data-instance=\"${instanceID}\"]`);\n    vis.style.order = priority;\n    vis.dataset.priority = priority;\n}\n\nconst setLastVisualisation = () => {\n    const currentLastVis = document.querySelector(`.block-vis-container.last-vis`);\n    if(currentLastVis){\n        if(currentLastVis.dataset.priority===_data__WEBPACK_IMPORTED_MODULE_1__.nextPriority-1){\n            return;\n        } else {\n            currentLastVis.classList.remove('last-vis');\n        }\n    }\n\n    const targetPriority = _data__WEBPACK_IMPORTED_MODULE_1__.nextPriority - 1;\n    const lastVis = document.querySelector(`.block-vis-container[data-priority=\"${targetPriority}\"]`);\n\n    if(lastVis){\n        lastVis.classList.add('last-vis');\n    }\n}\n\n//# sourceURL=webpack://decupla/./public/script/editContent/modules/visualization.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./public/script/editContent/main.js");
/******/ 	
/******/ })()
;